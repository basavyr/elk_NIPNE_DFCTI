input {
       file{ path=> "/home/robert.poenaru/elk/arc_slurm_jobs.txt"
             start_position => "beginning"
             sincedb_path => "NULL"
           }
}


#ruby kv and aggregate plugins for parsing two log lines into one object (event)
filter {
dissect { mapping => { "message" => "%{[@metadata][timestamp]} %{+[@metadata][timestamp]} %{event} - %{[@metadata][restOfLine]}" } }
    date { match => [ "[@metadata][timestamp]", "YYYY-MM-dd HH:mm:ss" ] }
    kv { source => "[@metadata][restOfLine]" target => "[@metadata][keys]" field_split => "," value_split => ":" remove_char_key => " " }
    aggregate {
        task_id => "%{[@metadata][keys][jobid]}"
        code => '
            keys = event.get("[@metadata][keys]")
            if keys
                keys.each { |k, v|
                    map[k] = v
                }
            end

            e = event.get("event")
            map["time#{e}"] = event.get("@timestamp")

            event.cancel
        '
        push_map_as_event_on_timeout => true
        timeout => 3
        timeout_code => '
              m=event.get("timeFinished").to_f - event.get("timeStarted").to_f
            event.set("duration", m/60.0)
        '
    }
    mutate {
             remove_field => ["@version"]
    }
    mutate {
       rename => { "jobid" => "job_ID"}
       rename => { "name" => "[job_Details][user_Name]"}
       rename => { "owner" => "[job_Details][job_Owner]"}
       rename => { "unixuser" => "[job_Details][user_ID]"}
       rename => { "lrms" => "[job_Details][Workload_Mgr]"}
       rename => { "queue" => "[job_Details][queue_Type]"}
       rename => { "timeStarted" => "[job_Details][Start_Time]"}
       rename => { "timeFinished" => "[job_Details][Finish_Time]"}
       rename => { "lrmsid" => "[job_Details][Workload_Mgr_ID]"}
       rename => { "duration" => "[job_Details][job_Duration]"}
    }
}

output {
        stdout{ 
              codec => rubydebug
              }
elasticsearch {

hosts => "localhost:9200"

#ssl_certificate => "/etc/letsencrypt/live/elk.nipne.ro/fullchain.pem"

#    ssl_key => "/etc/letsencrypt/live/elk.nipne.ro/privkey.pem"

#manage_template => false

index => "droplet-metrics-arc"

} 
 #       file{   
  #            codec => "json"
   #           path => "/root/elk/logstash_JSONoutput.json"
    #        }
}
